-* File ars3_carto_mini_natio_light.fex
-*============================================================================
-* Projet Suivi d'activité ARS 2014
-*
-* Destinataire  : Philippe Louvel
-* Auteur        : Guy FUTE (Information builders), Nicolas WATTIAUX (Information builders)
-* Date création : 10/2015
-* Description   : Procédure permettant de gérer les différents calculs de la mini carto nationale de l'onglet activité
-*
-*----------------------------------------------------------------------------
-* Modifications
-*  Date   : 10/2015
-*  Auteur : Guy FUTE
 
-*============================================================================
-* Procedure    : ars3_carto_mini_natio_light.fex
-* ------------------------------------------------------------------------------------------------
 
-DEFAULTH &FLAG='RIEN'
-DEFAULTH &ETPNAT=0
-DEFAULTH &MINI=1742
-DEFAULTH &LEPAS=1
-DEFAULTH &STR_GEO='''_FOC_NULL'''
SET MSG=OFF
 
-INCLUDE ars3_DEFAUT_ACT
-SET &VALREP=STRREP(&IBIMR_user.LENGTH,&IBIMR_user,1,'\',1,'_',&IBIMR_user.LENGTH,'A&IBIMR_user.LENGTH');
-*définition du libellé de la mesure utilisée (dans le tooltip pour la cartographie)
 
-*Récupérer le nb de dept choisi
SET CDN=OFF
SET CENT-ZERO=ON
 
 
-*Récupération de la valeur geo en fonction du contrôle  sélectionné (nouvelle région, région ou departement)
-* Lite des valeurs Geo: Si Département = valeur =>liste axe geo niveau 4
-*						 Si Région = valeur =>liste axe geo niveau 3
-*						 Si nouvelle region = valeur =>liste axe geo niveau 2
-TYPE Suppression de &LINES fichiers
-IF &DEPARTEMENT NE '_FOC_NULL' GOTO LVLDPT;
-SET &GEO=2;
-GOTO FLVL
-LVLDPT
-SET &GEO=4;
-GOTO FLVL
-FLVL
TABLE FILE AXE_GEOAR
PRINT VALEUR_AXE
WHERE NIVEAU EQ &GEO
ON TABLE HOLD AS TMP_AXE_GEO FORMAT ALPHA
END
-RUN
-SET &IORETURN=0;
-SET &CPT=0;
-SET &STR_GEO='';
-REPEAT :BOUCLE1 WHILE &IORETURN EQ 0;
-READ TMP_AXE_GEO &GEO_VAL.A15.
-IF &IORETURN NE 0 THEN GOTO :BOUCLE1;
-SET &STR_GEO=IF &STR_GEO EQ '' THEN &GEO_VAL ELSE IF &CPT EQ 1 THEN '''' | &STR_GEO | '''' | ',' | '''' | &GEO_VAL | '''' ELSE &STR_GEO | ',' | '''' | &GEO_VAL | '''';
-SET &STR_GEO=IF &LINES EQ 1 THEN '''' | &STR_GEO | '''' ELSE &STR_GEO;
-SET &CPT=&CPT+1;
-:BOUCLE1
-CLOSE TMP_AXE_GEO
 
 
-*Liste des valeurs de l'axe geo, en fonction du niveau(nouvelles régions, régions, départements) se trouvant dans la table sql
-IF &DEPARTEMENT NE '_FOC_NULL' THEN GOTO LIST_DEPART;
 
TABLE FILE LISTE_NREG
PRINT LIB_NREG
ON TABLE SAVE
END
-GOTO FIN_LIST
-LIST_DEPART
TABLE FILE LISTE_DEPT
PRINT LIB_DEPT
ON TABLE SAVE
END
-GOTO FIN_LIST
-FIN_LIST
-RUN
 
 
-* Récupération du niveau d'activité sélectionné dans les filtres
-SET &NIVEAU_ACTI=IF (&SECTEUR NE '_FOC_NULL') AND (&TYPE_INT EQ '_FOC_NULL')  THEN 2 ELSE IF (&TYPE_INT NE '_FOC_NULL') AND (&MISSION EQ '_FOC_NULL') THEN 3 ELSE IF &MISSION NE '_FOC_NULL' THEN 4 ELSE 1;
-SET &NIV_ACTI_MOINS1= IF &NIVEAU_ACTI EQ 1 THEN 1 ELSE &NIVEAU_ACTI-1;
 
-* Récupération du niveau Geo sélectionné dans les filtres pour le dénominateur du calcul du ratio
-SET &NIVEAU_GEO=IF (&NEW_REGION NE '_FOC_NULL') AND (&DEPARTEMENT EQ '_FOC_NULL') THEN 2 ELSE IF (&DEPARTEMENT EQ '_FOC_NULL') THEN 3 ELSE IF &DEPARTEMENT NE '_FOC_NULL' THEN 4 ELSE  1;
-SET &NIVEAU_GEO_PLUS1= IF &NEW_REGION EQ '_FOC_NULL' AND &DEPARTEMENT EQ '_FOC_NULL' THEN &NIVEAU_GEO+1 ELSE &NIVEAU_GEO;
 
-* Calcul du Dénominateur du ratio
 
TABLE FILE VIEW_IND_VAL_IA
SUM VALEUR_FINALE/D20.1 AS 'ETPNAT'
-*Filtre INDICATEUR
-IF &NIVEAU_ACTI EQ 1 THEN GOTO :SKPBY;
BY AX02_CODE
-:SKPBY
WHERE ( ID_INDICATEUR EQ '&ID_INDICATEUR' )
-*Filtre TEMPS
WHERE ( AX01_CODE EQ '2014' )
-*Filtre GEO
WHERE ( AX02_NIVEAU EQ &NIVEAU_GEO_PLUS1)
-*Filtre ENTITE
WHERE ( AX03_CODE IN ( 'AARS16ENT1ARS00' ) )
 
-*Filtre ACTIVITE
-IF &SECTEUR EQ '_FOC_NULL' GOTO WHTT_SECT;
-IF &NIVEAU_ACTI GT 2 GOTO WHTT_SECT;
-****** Vérification de l'axe corps(catégorie), si une catégorie est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui sélectionné dans le controle correspondant
-*******Vérification de l'axe corps(catégorie), si une catégorie est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui du niveau inférieur correspondant
-IF &STATUT NE '_FOC_NULL' THEN GOTO ACTI_NUMD;
WHERE ( AX04_CODE EQ 'AARS1600')
-GOTO ACTI_NUMEND
-ACTI_NUMD
WHERE ( AX04_CODE EQ &SECTEUR)
-GOTO FINWHEREACT;
-ACTI_NUMEND
 
 
-WHTT_SECT
-IF &TYPE_INT EQ '_FOC_NULL' GOTO WHTT_TYPINT;
-IF &NIVEAU_ACTI GT 3 GOTO WHTT_TYPINT;
-****** Vérification de l'axe corps(catégorie), si une catégorie est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui sélectionné dans le controle correspondant
-*******Vérification de l'axe corps(catégorie), si une catégorie est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui du niveau inférieur correspondant
-IF &STATUT NE '_FOC_NULL' THEN GOTO ACTI_NUMD1;
WHERE ( AX04_CODE EQ &SECTEUR)
-GOTO ACTI_NUMEND1
-ACTI_NUMD1
WHERE ( AX04_CODE EQ &TYPE_INT)
-GOTO FINWHEREACT;
-ACTI_NUMEND1
 
 
-WHTT_TYPINT
-IF &MISSION EQ '_FOC_NULL' GOTO WHTT_MISS;
-IF &NIVEAU_ACTI GT 4 GOTO WHTT_MISS;
-****** Vérification de l'axe corps(catégorie), si une catégorie est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui sélectionné dans le controle correspondant
-*******Vérification de l'axe corps(catégorie), si aucune catégorie n'est sélectionnée, alors le filtre de l'activité du dénominateur doit être celui du niveau inférieur correspondant
-IF &STATUT NE '_FOC_NULL' THEN GOTO ACTI_NUMD2;
WHERE ( AX04_CODE EQ &TYPE_INT)
-GOTO ACTI_NUMEND2
-ACTI_NUMD2
WHERE ( AX04_CODE EQ &MISSION)
-GOTO FINWHEREACT;
-ACTI_NUMEND2
 
 
-WHTT_MISS
WHERE ( AX04_NIVEAU EQ &NIV_ACTI_MOINS1)
 
-FINWHEREACT
 
-*Filtre PROGRAMME DE FINANCEMENT
WHERE ( AX05_CODE IN ( 'AARS15EFF0TOUS ' ) )
-*Filtre STATUT
WHERE ( AX06_CODE IN ( 'AARS16ST00TOUT   ' ) )
-*Filtre INSPECTION CONTROLE
WHERE ( AX07_CODE IN ( 'AARS15ICE_0TOUT  ' ) )
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS ETP_NAT
END
-RUN
-*********SI on est au niveau 1 de l'axe ACTIVITE, alors on doit se positionner au niveau 1 de l'axe GEO, et récupérer la somme via une variable &ETPNAT, sinon
-*********on le conserve le résultat dans le tableau ETP_NAT
-IF &NIVEAU_ACTI NE 1 THEN GOTO SKIPREADNAT;
-READFILE ETP_NAT
-TYPE &ETPNAT
-*-EXIT
-GOTO RATIO
 
 
 
-SKIPREADNAT
-TYPE Niveau Activité sélectionnée
-*************** Calcul du numérateur du ratio******************************
 
TABLE FILE VIEW_IND_VAL_IA
SUM VALEUR_FINALE/D20.1 AS 'ETPINTERMED'
AX02_LIBELLE
BY AX02_CODE
BY AX02_NIVEAU
-*Filtre INDICATEUR
WHERE ( ID_INDICATEUR EQ '&ID_INDICATEUR' )
-*Filtre TEMPS
WHERE ( AX01_CODE EQ '2014' )
-*Filtre GEO
WHERE ( AX02_NIVEAU EQ &NIVEAU_GEO_PLUS1)
-*Filtre ENTITE
WHERE ( AX03_CODE IN ( 'AARS16ENT1ARS00' ) )
-*Filtre ACTIVITE
-IF &SECTEUR EQ '_FOC_NULL' GOTO WHTT_SECT1;
-IF &NIVEAU_ACTI GT 2 GOTO WHTT_SECT1;
-TYPE Niveau Géo=&NIVEAU_GEO_PLUS1
-TYPE Secteur=&SECTEUR
WHERE ( AX04_CODE EQ &SECTEUR)
-WHTT_SECT1
-IF &TYPE_INT EQ '_FOC_NULL' GOTO WHTT_TYPINT1;
-IF &NIVEAU_ACTI GT 3 GOTO WHTT_TYPINT1;
-TYPE Niveau Géo=&NIVEAU_GEO_PLUS1
-TYPE Type d'intervention=&TYPE_INT
WHERE ( AX04_CODE EQ &TYPE_INT)
-WHTT_TYPINT1
-IF &MISSION EQ '_FOC_NULL' GOTO WHTT_MISS1;
-IF &NIVEAU_ACTI GT 4 GOTO WHTT_MISS1;
-TYPE Niveau Géo=&NIVEAU_GEO_PLUS1
-TYPE Mission=&MISSION
WHERE ( AX04_CODE EQ &MISSION)
-WHTT_MISS1
-TYPE Niveau Géo=&NIVEAU_GEO_PLUS1
-TYPE Niveau Activité=&NIVEAU_ACTI
WHERE ( AX04_NIVEAU EQ &NIVEAU_ACTI)
-*Filtre PROGRAMME DE FINANCEMENT
WHERE ( AX05_CODE IN ( 'AARS15EFF0TOUS ' ) )
-*Filtre STATUT
-SET &STAT = IF &STATUT EQ '_FOC_NULL' THEN '''AARS16ST00TOUT''' ELSE &STATUT;
WHERE ( AX06_CODE EQ &STAT.EVAL)
-*Filtre INSPECTION CONTROLE
WHERE ( AX07_CODE IN ( 'AARS15ICE_0TOUT ' ) )
 
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS ETP_INTERMED
END
-RUN
-IF &LINES EQ 0 THEN GOTO :ERRMESS1; 
 
-***************************Calcul du ration ETP_INTERMED/ETP_NAT******************************
 
-***************CAS 1: Le dénominateur est récupéré dans la variable &ETP_NAT
-* Lorsque le dénominateur fournit une seule ligne en sortie (Secteur=tous), calcul du ratio
-IF &NIVEAU_ACTI NE 1  THEN GOTO SKIPREADNAT2;
-RATIO
-TYPE CAS 1 Niveau Touts les Activités
TABLE FILE VIEW_IND_VAL_IA
SUM VALEUR_FINALE/D20.1
AX02_LIBELLE
COMPUTE ETPNAT/D8.2=&ETPNAT;
COMPUTE CALC_DP/D20.1= (VALEUR_FINALE /&ETPNAT) *100;
COMPUTE CALC_DPT/D8=CALC_DP;
BY AX02_CODE
BY AX02_NIVEAU
-*Filtre INDICATEUR
WHERE ( ID_INDICATEUR EQ '&ID_INDICATEUR' )
-*Filtre TEMPS
WHERE ( AX01_CODE EQ '2014' )
-*Filtre GEO
WHERE ( AX02_NIVEAU EQ &NIVEAU_GEO_PLUS1)
-*Filtre ENTITE
WHERE ( AX03_CODE IN ( 'AARS16ENT1ARS00' ) )
-*Filtre ACTIVITE et Filtre GEO
-IF &SECTEUR EQ '_FOC_NULL' GOTO WHTT_SECT12;
-IF &NIVEAU_ACTI GT 2 GOTO WHTT_SECT12;
WHERE ( AX04_CODE EQ &SECTEUR)
 
-WHTT_SECT12
-IF &TYPE_INT EQ '_FOC_NULL' GOTO WHTT_TYPINT12;
-IF &NIVEAU_ACTI GT 3 GOTO WHTT_TYPINT12;
WHERE ( AX04_CODE EQ &TYPE_INT)
 
-WHTT_TYPINT12
-IF &MISSION EQ '_FOC_NULL' GOTO WHTT_MISS12;
-IF &NIVEAU_ACTI GT 4 GOTO WHTT_MISS12;
WHERE ( AX04_CODE EQ &MISSION)
 
-WHTT_MISS12
WHERE ( AX04_NIVEAU EQ &NIVEAU_ACTI)
 
-*Filtre PROGRAMME DE FINANCEMENT
WHERE ( AX05_CODE IN ( 'AARS15EFF0TOUS ' ) )
-*Filtre STATUT
-SET &STAT = IF &STATUT EQ '_FOC_NULL' THEN '''AARS16ST00TOUT''' ELSE &STATUT;
WHERE ( AX06_CODE EQ &STAT.EVAL)
-*Filtre INSPECTION CONTROLE
WHERE ( AX07_CODE IN ( 'AARS15ICE_0TOUT ' ) )
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS ETP_RATIO
END
-RUN
 
-IF &LINES EQ 0 THEN GOTO :ERRMESS1; 
 
 
-GOTO :TABLEFINALE;
 
-***************CAS 2: Le dénominateur est récupéré du tableau ETPNAT
-* Jointure entre les 2 tables numérateur et dénominateur pour effectuer les calcule en fonction des codes geo (axe 2)
-SKIPREADNAT2
-TYPE CAS 2 Niveau activité sélectionnée
-TYPE -- JOINTURE TABLE
JOIN CLEAR *
JOIN AX02_CODE IN ETP_INTERMED TO AX02_CODE IN ETP_NAT AS J1
END
-RUN
 
TABLE FILE ETP_INTERMED
SUM VALEUR_FINALE/D20.1 AS 'ETPINTERMED'
COMPUTE CALC_DP/D20.1=ETPINTERMED /ETPNAT *100;
COMPUTE CALC_DPT/D8=CALC_DP;
AX02_LIBELLE
BY AX02_CODE
BY AX02_NIVEAU
BY ETPNAT
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS ETP_RATIO
END
-RUN
 
 
-:TABLEFINALE;
 
 
-* Calcul de la moyenne, de la médiane, du maximum et du minimum à partir des tables de ratio *******
-TYPE --- CALCUL MOYENNE / MEDIANE / MINI / MAXI ---
TABLE FILE ETP_RATIO
SUM
AVE.CALC_DPT WITHIN AX02_NIVEAU AS 'MOYENNE'
MDN.CALC_DPT WITHIN AX02_NIVEAU AS 'MEDIANE'
MAX.CALC_DPT WITHIN AX02_NIVEAU AS 'MAXI'
MIN.CALC_DPT WITHIN AX02_NIVEAU AS 'MINI'
BY AX02_NIVEAU
BY AX02_CODE
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS ETP_CALC
END
-RUN
 
 
JOIN CLEAR *
JOIN AX02_CODE IN ETP_RATIO TO AX02_CODE IN ETP_CALC AS J1
TABLE FILE ETP_RATIO
SUM
COMPUTE CALC_MOY/D8.1=MOYENNE; NOPRINT
COMPUTE CALC_MEDIAN/D8.1=MEDIANE; NOPRINT
COMPUTE DI_CALC/D3.1=(CALC_MOY - CALC_MEDIAN) / CALC_MEDIAN; NOPRINT
COMPUTE DIFF_CALC/A3= FTOA(DI_CALC,'(D3.1)', 'A3');
MINI/I3
MAXI/I3
BY AX02_CODE NOPRINT
WHERE RECORDLIMIT EQ 1
ON TABLE SET CENT-ZERO ON
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS TBL_RESULT FORMAT ALPHA
END
-RUN
 
-READ TBL_RESULT &DIFF_CALC.3. &MINI.3. &MAXI.3.
-CLOSE TBL_RESULT
-TYPE (MOY-MEDIAN)/MEDIAN=&DIFF_CALC
-TYPE MINI=&MINI
-TYPE MAXI=&MAXI
-SET &LEPAS=IF (&DIFF_CALC GT -0.05) AND (&DIFF_CALC LE 0.2) THEN (&MAXI - &MINI)/5 ELSE IF (&DIFF_CALC GT 0.2) THEN (&MAXI - &MINI)/(1+2+3+4+5) ELSE IF &DIFF_CALC LE -0.05 THEN (&MAXI - &MINI)/(1+2+3+4+5);
-SET &LEPAS= IF &LEPAS EQ 0 THEN 1 ELSE &LEPAS;
-TYPE &LEPAS
-SET &&LEV0_DEB = &MINI ;
-SET &&LEV0_FIN = IF (&DIFF_CALC GT -0.05) AND (&DIFF_CALC LE 0.2) THEN &&LEV0_DEB + &LEPAS ELSE IF (&DIFF_CALC GT 0.2) THEN  &&LEV0_DEB + 1 * &LEPAS ELSE IF &DIFF_CALC LE -0.05 THEN &&LEV0_DEB + 5 * &LEPAS;
-TYPE 'LEV0=' &&LEV0_FIN
-SET &&LEV1_FIN = IF (&DIFF_CALC GT -0.05) AND (&DIFF_CALC LE 0.2) THEN &&LEV0_FIN + &LEPAS  ELSE IF (&DIFF_CALC GT 0.2) THEN  &&LEV0_FIN + 2 * &LEPAS ELSE IF &DIFF_CALC LE -0.05 THEN &&LEV0_FIN + 4 * &LEPAS;
-SET &&LEV2_FIN = IF (&DIFF_CALC GT -0.05) AND (&DIFF_CALC LE 0.2) THEN &&LEV1_FIN + &LEPAS  ELSE IF (&DIFF_CALC GT 0.2) THEN  &&LEV1_FIN + 3 * &LEPAS ELSE IF &DIFF_CALC LE -0.05 THEN &&LEV1_FIN + 3 * &LEPAS;
-SET &&LEV3_FIN = IF (&DIFF_CALC GT -0.05) AND (&DIFF_CALC LE 0.2) THEN &&LEV2_FIN + &LEPAS  ELSE IF (&DIFF_CALC GT 0.2) THEN  &&LEV2_FIN + 4 * &LEPAS ELSE IF &DIFF_CALC LE -0.05 THEN &&LEV2_FIN + 2 * &LEPAS;
 
-:ERRMESS1
-INCLUDE ars3_NODATA
