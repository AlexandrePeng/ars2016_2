-* File struct3_rpt_rep_pdf.fex
-*============================================================================
-* Projet Suivi d'activité ARS 2016
-*
-* Destinataire  : Philippe Louvel
-* Auteur        :  Guy Futé (Information Builders France)
-* Date création : 01/12/2016
-* Description   : Enquête Activité ARS par Statut
-*
-*----------------------------------------------------------------------------
-* Modifications
-*  Date   : jj/mm/ssaa
-*  Auteur : first last - sté
-*  Objet  : ...
-*============================================================================
-*-*Ajout du 0 avant les décimales lorque l'on a une valeur compris entre 0 et 1
 
-SET &ECHO = ALL ;
-DEFAULTH &GEOAR_N2='_FOC_NULL'
-DEFAULTH &AX02_LIBELLE=''
-*SET NODATA=0
SET CENT-ZERO = ON
-TYPE ============================================================================
-TYPE Procédure    : struct3_rpt_rep.fex
-TYPE ============================================================================
 
-*------------------------------------------------------------------
-* Definition du passage de paramètre pour Total ETP et % du total
-*------------------------------------------------------------------
 
-INCLUDE induct3_default
-*Renvoie à la page de garde lorsqu'aucun contrôle de l'axe géo n'est sélectionné
-IF &NEW_REGION EQ '_FOC_NULL' THEN GOTO :PGARDE;
-IF &SECTEUR EQ '_FOC_NULL' THEN GOTO :PGARDE;
 
 
 
TABLE FILE AXE_GEOAR
SUM GEOAR_N2
WHERE GEOAR_N2 EQ &NEW_REGION.QUOTEDSTRING
ON TABLE HOLD AS TMP_AXE_GEO FORMAT ALPHA
END
-RUN
-READ TMP_AXE_GEO &STR_GEO.A15.
 
 
-**********************Récupération des secteurs sélectionnés
-SET &NIV_ACTIVITE=IF &SECTEUR NE '_FOC_NULL' THEN '2' ELSE '1';
TABLE FILE AXE_AARS17INDUCTEUR
PRINT VALEUR_AXE
WHERE NIVEAU EQ &NIV_ACTIVITE.QUOTEDSTRING
-IF &NIV_ACTIVITE EQ 1 THEN GOTO :ACTIVITE_N1;
WHERE AARS17IND_N2 EQ &SECTEUR.QUOTEDSTRING
-:ACTIVITE_N1
ON TABLE HOLD AS TMP_AXE_AARS17INDUCTEUR FORMAT ALPHA
END
-RUN
 
-SET &IORETURN=0;
-SET &CPT=0;
-SET &STR_ACT='';
-REPEAT :BOUCLE_AARS17INDUCTEUR WHILE &IORETURN EQ 0;
-READ TMP_AXE_AARS17INDUCTEUR &ACT_VAL.A15.
-IF &IORETURN NE 0 THEN GOTO :BOUCLE_AARS17INDUCTEUR;
-SET &STR_ACT=IF &STR_ACT EQ '' THEN &ACT_VAL ELSE IF &CPT EQ 1 THEN '''' | &STR_ACT | '''' | ',' | '''' | &ACT_VAL | '''' ELSE &STR_ACT | ',' | '''' | &ACT_VAL | '''';
-SET &STR_ACT=IF &LINES EQ 1 THEN '''' | &STR_ACT | '''' ELSE &STR_ACT;
-SET &CPT=&CPT+1;
-:BOUCLE_AARS17INDUCTEUR
-CLOSE TMP_AXE_AARS17INDUCTEUR
-TYPE &STR_ACT
 
-*******************récupération de la liste des régions ou nouvelles régions selon leur rang
 
-DEFAULTH &VALEUR_VDB='';
-DEFAULTH &AX02_LIBELLE='';
TABLE FILE VIEW_IND_VDB_IA
SUM VALEUR_VDB
BY AX02_CODE
BY AX02_LIBELLE
WHERE AX01_CODE EQ '&EXERCICE'
WHERE ID_ELEMENT EQ '&ID_RANKING'
WHERE AX02_NIVEAU EQ &GEO
WHERE AX04_CODE IN (&STR_ACT)
ON TABLE HOLD AS TMP_LIST_RANKING FORMAT ALPHA
END
 
-*******************récupération du rang de la région ou nouvelle région sélectionnée
TABLE FILE TMP_LIST_RANKING
SUM AX02_CODE
BY VALEUR_VDB/I2
WHERE AX02_CODE EQ '&STR_GEO'
ON TABLE HOLD AS TMP_RANKING_CODE FORMAT ALPHA
END
-RUN
 
-IF &LINES EQ 0 THEN GOTO NORANKING;
 
-READFILE TMP_RANKING_CODE
-RUN
 
-*******************récupération du libellé de la région ou nouvelle région sélectionnée
TABLE FILE TMP_LIST_RANKING
SUM AX02_LIBELLE
BY VALEUR_VDB/I2
WHERE AX02_CODE EQ '&STR_GEO'
ON TABLE HOLD AS TMP_RANKING_LIBELLE
END
-RUN
-READFILE TMP_RANKING_LIBELLE
-RUN
-**************************************Initialisation des rangs à récupérer par rapport à la valeur géographique sélectionnée dans le cas général*******************
-SET &RANK_PLUS1 = &VALEUR_VDB + 1;
-SET &RANK_PLUS2 = &VALEUR_VDB + 2;
-SET &RANK_MOINS1 = &VALEUR_VDB - 1;
-SET &RANK_MOINS2 = &VALEUR_VDB - 2;
-****************************************Cas particuliers***********************
-******************************Cas 1: test afin de déterminer s'il s'agit du dernier élément de la liste************
TABLE FILE TMP_LIST_RANKING
SUM VALEUR_VDB
 AX02_LIBELLE
 BY AX02_CODE
WHERE ( VALEUR_VDB EQ &RANK_PLUS1 )
ON TABLE SET ASNAMES ON
ON TABLE SAVE FORMAT ALPHA
END
-RUN
-IF &LINES EQ 0 THEN GOTO LASTGEO;
 
-******************************Cas 2: test afin de déterminer s'il s'agit de l'avant dernier élément de la liste************
TABLE FILE TMP_LIST_RANKING
SUM VALEUR_VDB
 AX02_LIBELLE
 BY AX02_CODE
WHERE ( VALEUR_VDB EQ &RANK_PLUS2 )
ON TABLE SET ASNAMES ON
ON TABLE SAVE FORMAT ALPHA
END
-RUN
-IF &LINES EQ 0 THEN GOTO BEFORELASTGEO;
 
-******************************Cas 3:test afin de déterminer s'il s'agit du premier élément de la liste************
TABLE FILE TMP_LIST_RANKING
SUM VALEUR_VDB
 AX02_LIBELLE
 BY AX02_CODE
WHERE ( VALEUR_VDB EQ &RANK_MOINS1 )
ON TABLE SET ASNAMES ON
ON TABLE SAVE FORMAT ALPHA
END
-RUN
-IF &LINES EQ 0 THEN GOTO FIRSTGEO;
 
-******************************Cas 4: test afin de déterminer s'il s'agit du 2e élément de la liste************
TABLE FILE TMP_LIST_RANKING
SUM VALEUR_VDB
 AX02_LIBELLE
 BY AX02_CODE
WHERE ( VALEUR_VDB EQ &RANK_MOINS2 )
ON TABLE SET ASNAMES ON
ON TABLE SAVE FORMAT ALPHA
END
-RUN
-IF &LINES EQ 0 THEN GOTO SECONDGEO;
 
-GOTO FININIT;
 
 
-LASTGEO
-SET &VALEUR_VDB = &VALEUR_VDB -2;
-GOTO ININTIAL_VAL;
 
-BEFORELASTGEO
-SET &VALEUR_VDB = &VALEUR_VDB -1;
-GOTO ININTIAL_VAL;
 
-FIRSTGEO
-SET &VALEUR_VDB = &VALEUR_VDB +2;
-GOTO ININTIAL_VAL;
 
-SECONDGEO
-SET &VALEUR_VDB = &VALEUR_VDB +1;
-GOTO ININTIAL_VAL;
 
-*******************Récupération de la région ou nouvelle sélectionnée ainsi que 4 régions ou nouvelles régions l'entourant
-ININTIAL_VAL
-SET &RANK_PLUS1 = &VALEUR_VDB + 1;
-SET &RANK_PLUS2 = &VALEUR_VDB + 2;
-SET &RANK_MOINS1 = &VALEUR_VDB - 1;
-SET &RANK_MOINS2 = &VALEUR_VDB - 2;
 
-FININIT
TABLE FILE TMP_LIST_RANKING
SUM VALEUR_VDB
 AX02_LIBELLE
 BY AX02_CODE AS 'GEO_VAL'
WHERE ( VALEUR_VDB EQ &VALEUR_VDB ) OR ( VALEUR_VDB EQ &RANK_PLUS1 )  OR ( VALEUR_VDB EQ &RANK_PLUS2 ) OR ( VALEUR_VDB EQ &RANK_MOINS1 ) OR ( VALEUR_VDB EQ &RANK_MOINS2 )
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS TMP_GEO_FINAL FORMAT ALPHA
END
-RUN
 
 
-SET &IORETURN=0;
-SET &CPT=0;
-SET &STR_GEO='';
-REPEAT :BOUCLE_TMP_GEO_FINAL WHILE &IORETURN EQ 0;
-READ TMP_GEO_FINAL &GEO_VAL.A15.
-IF &IORETURN NE 0 THEN GOTO :BOUCLE_TMP_GEO_FINAL;
-SET &STR_GEO=IF &STR_GEO EQ '' THEN &GEO_VAL ELSE IF &CPT EQ 1 THEN '''' | &STR_GEO | '''' | ',' | '''' | &GEO_VAL | '''' ELSE &STR_GEO | ',' | '''' | &GEO_VAL | '''';
-SET &STR_GEO=IF &LINES EQ 1 THEN '''' | &STR_GEO | '''' ELSE &STR_GEO;
-SET &CPT=&CPT+1;
-:BOUCLE_TMP_GEO_FINAL
-CLOSE TMP_AXE_GEO
-TYPE &STR_GEO
-:FINCALCGEO
-RUN
 
-**********************Récupération de libellés des 5 régions ou nouvelles régions à afficher sous forme de variables distinctes ************************************
-DEFAULTH &CHECKGEO_SELECT='';
-DEFAULTH &CHECKGEO_MOINS1='';
-DEFAULTH &CHECKGEO_MOINS2='';
-DEFAULTH &CHECKGEO_PLUS1='';
-DEFAULTH &CHECKGEO_PLUS2='';
 
TABLE FILE TMP_LIST_RANKING
PRINT AX02_LIBELLE AS 'CHECKGEO_SELECT'
WHERE VALEUR_VDB EQ &VALEUR_VDB
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS CHECKGEO_SELECT
END
-RUN
-READFILE CHECKGEO_SELECT
 
-RUN
-*****
TABLE FILE TMP_LIST_RANKING
PRINT AX02_LIBELLE AS 'CHECKGEO_MOINS1'
WHERE VALEUR_VDB EQ &RANK_MOINS1
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS CHECKGEO_MOINS1
END
-RUN
-READFILE CHECKGEO_MOINS1
-RUN
 
-*****
TABLE FILE TMP_LIST_RANKING
PRINT AX02_LIBELLE AS 'CHECKGEO_MOINS2'
WHERE VALEUR_VDB EQ &RANK_MOINS2
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS CHECKGEO_MOINS2
END
-RUN
-READFILE CHECKGEO_MOINS2
-RUN
 
-*****
TABLE FILE TMP_LIST_RANKING
PRINT AX02_LIBELLE AS 'CHECKGEO_PLUS1'
WHERE VALEUR_VDB EQ &RANK_PLUS1
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS CHECKGEO_PLUS1
END
-RUN
-READFILE CHECKGEO_PLUS1
-RUN
 
-*****
TABLE FILE TMP_LIST_RANKING
PRINT AX02_LIBELLE AS 'CHECKGEO_PLUS2'
WHERE VALEUR_VDB EQ &RANK_PLUS2
ON TABLE SET ASNAMES ON
ON TABLE HOLD AS CHECKGEO_PLUS2
END
-RUN
-READFILE CHECKGEO_PLUS2
-RUN
 
 
-*******************************************************************************************************************************************************************************************
 
DEFINE FILE VIEW_IND_VAL_IA
VALEUR_FIN/D20.2= IF VALEUR_FINALE IS MISSING THEN 0 ELSE VALEUR_FINALE ;
END
TABLE FILE VIEW_IND_VAL_IA
SUM VALEUR_FIN
BY AX02_CODE
BY AX02_LIBELLE
BY AX03_ORDRE
BY AX03_CODE
BY AX03_LIBELLE
-*Filtre INDICATEUR
	WHERE ( ID_INDICATEUR EQ '&ID_INDICATEUR' )
-*Filtre TEMPS
	WHERE ( AX01_CODE EQ '&EXERCICE' )
-*Filtre GEO
	WHERE ( AX02_CODE IN ( &STR_GEO ) )
-IF &GEO EQ 3 THEN GOTO NIVGEO3 ;
WHERE ( AX02_NIVEAU EQ 2)
-GOTO FINNIVGEO
-NIVGEO3
WHERE ( AX02_NIVEAU EQ 3)
-FINNIVGEO
-*Filtre STATUT
 
-IF &STATUT NE 'STATUT' THEN GOTO WHERENIV3;
WHERE ( AX03_NIVEAU EQ 2 )
-GOTO WHERENIVFIN
-WHERENIV3
 
WHERE ( AX03_NIVEAU EQ 3 )
-WHERENIVFIN
-*Filtre ACTIVITE
	WHERE ( AX04_CODE IN ( &STR_ACT ) )
ON TABLE SET ASNAMES ON
ON TABLE SET ASNAME ON
ON TABLE HOLD AS TMP_FNEWREG FORMAT ALPHA
END
-RUN
 
 
-INCLUDE ARS3_NODATA
 
JOIN CLEAR *
JOIN AX02_CODE IN TMP_LIST_RANKING TO MULTIPLE AX02_CODE IN TMP_FNEWREG AS J1;
JOIN AX03_CODE IN TMP_LIST_RANKING TO UNIQUE VALEUR_AXE IN AXE_AARS17STATUT AS J2;
END
-RUN
 
 
TABLE FILE TMP_LIST_RANKING
SUM PCT.VALEUR_FIN AS 'PCT_NREG'
BY AARS17STATUT_N2_ORD
BY AARS17STATUT_N2_LIB AS ''
BY AARS17STATUT_N3_ORD
BY AARS17STATUT_N3_LIB AS ''
ACROSS VALEUR_VDB NOPRINT
ACROSS AX02_CODE NOPRINT
ACROSS AX02_LIBELLE AS 'geo'
ON TABLE HOLD AS TMP_LIST_RANKING2
END
-RUN
 
-*Recuperer les libéllés
TABLE FILE AXE_GEOAR
PRINT LIBELLE
WHERE VALEUR_AXE EQ '&NEW_REGION'
ON TABLE HOLD AS TMP_LIB_GEO_NREG FORMAT ALPHA
END
-RUN
 
-READ TMP_LIB_GEO_NREG &REGION_LIB.A60.
 
 
-*Ajouter une étoile pour la région sélectionnée
-SET &REG_A = IF &REGION_LIB EQ &CHECKGEO_MOINS2 THEN '*A' ELSE 'A';
-SET &REG_B = IF &REGION_LIB EQ &CHECKGEO_MOINS1 THEN '*B' ELSE 'B';
-SET &REG_C = IF &REGION_LIB EQ &CHECKGEO_SELECT THEN '*C' ELSE 'C';
-SET &REG_D = IF &REGION_LIB EQ &CHECKGEO_PLUS1 THEN '*D' ELSE 'D';
-SET &REG_E = IF &REGION_LIB EQ &CHECKGEO_PLUS2 THEN '*E' ELSE 'E';
 
 
DEFINE FILE TMP_LIST_RANKING2
BLANK/A1='';
END
TABLE FILE TMP_LIST_RANKING2
PRINT
 E01/A55 NOPRINT
 E02/A55 AS ''
-IF &STATUT EQ 'STATUT' THEN GOTO :SUITESTAT;
 E03/A55 NOPRINT
 E04/A55 AS ''
-:SUITESTAT
 E05/D3% AS '&REG_A'
 E06/D3% AS '&REG_B'
 E07/D3% AS '&REG_C'
 E08/D3% AS '&REG_D'
 E09/D3% AS '&REG_E'
 BY BLANK NOPRINT
 HEADING
"Région sélectionnée: &REGION_LIB"
"&REG_A : &CHECKGEO_MOINS2"
"&REG_B : &CHECKGEO_MOINS1"
"&REG_C : &CHECKGEO_SELECT"
"&REG_D : &CHECKGEO_PLUS1"
"&REG_E : &CHECKGEO_PLUS2"
-IF &STATUT EQ 'STATUT' THEN GOTO :FINSUITESTAT;
BY AARS17STATUT_N2_ORD NOPRINT
BY AARS17STATUT_N3_ORD NOPRINT
ON BLANK SUBFOOT
"TOTAL<+0>100%<+0>100%<+0>100%<+0>100%<+0>100%<+0>"
-GOTO :ONTABLE;
 
-:FINSUITESTAT
 
BY AARS17STATUT_N2_ORD NOPRINT
ON BLANK SUBFOOT
"TOTAL<+0>100%<+0>100%<+0>100%<+0>100%<+0>100%<+0>"
 
-:ONTABLE
ON TABLE SET ASNAMES ON
ON TABLE NOTOTAL
ON TABLE SET PAGE-NUM OFF
ON TABLE SET BYDISPLAY ON
ON TABLE SET HTMLCSS ON
ON TABLE SET CDN SPACE
ON TABLE PCHOLD FORMAT PDF
ON TABLE SET STYLE *
     INCLUDE = endeflt,
$
-* PAGESIZE='A3',
-*     LEFTMARGIN=0.500000,
-*     RIGHTMARGIN=0.500000,
-*     TOPMARGIN=0.500000,
-*     BOTTOMMARGIN=0.500000,
-*     ORIENTATION=LANDSCAPE,
-*$
-IF &STATUT EQ 'STATUT' THEN GOTO :STYLEN2;
TYPE=REPORT, SQUEEZE=ON,GRID=ON,BORDER-TOP=LIGHT,BORDER-LEFT=LIGHT,BORDER-RIGHT=LIGHT,BORDER-BOTTOM=LIGHT, SIZE=6,$
TYPE=REPORT, COLUMN=N5, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N7, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N8, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N9, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N10, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N11, JUSTIFY=LEFT,$
TYPE=REPORT, COLUMN=N12, JUSTIFY=LEFT,$
TYPE=TITLE,JUSTIFY=CENTER,BACKCOLOR=RGB(184 204 228),$
TYPE=TITLE,COLUMN=N5,BORDER-LEFT=OFF,BORDER-TOP=OFF,BACKCOLOR=RGB(255 255 255),$
TYPE=TITLE,COLUMN=N7,BORDER-LEFT=OFF,BORDER-TOP=OFF,BACKCOLOR=RGB(255 255 255),$
GRAPHTYPE=DATA,COLUMN=N8,GRAPHCOLOR='FUCHSIA',GRAPHLENGTH=0.100000,$
GRAPHTYPE=DATA,COLUMN=N9,GRAPHCOLOR='BLUE',GRAPHLENGTH=0.10000,$
GRAPHTYPE=DATA,COLUMN=N10,GRAPHCOLOR='LIME',GRAPHLENGTH=0.10000,$
GRAPHTYPE=DATA,COLUMN=N11,GRAPHCOLOR='PURPLE',GRAPHLENGTH=0.10000,$
GRAPHTYPE=DATA,COLUMN=N12,GRAPHCOLOR='YELLOW',GRAPHLENGTH=0.10000,$
TYPE=HEADING,
     SIZE=6,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
$
TYPE=SUBFOOT,
     BACKCOLOR=RGB(184 204 228),
     HEADALIGN=BODY,
	 SIZE=6,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=1,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=LEFT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=2,
     SIZE=6,
     COLSPAN=2,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=3,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=4,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=5,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=6,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=7,
     SIZE=6,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
-*TYPE=REPORT,
-*     COLUMN=N5,
-*     WRAP=0.8,
-*$
-*TYPE=REPORT,
-*     COLUMN=N7,
-*     WRAP=0.8,
-*$
ENDSTYLE
END
-GOTO FINTAB;
 
-:STYLEN2
TYPE=REPORT,SQUEEZE=ON,GRID=ON,BORDER-TOP=LIGHT,BORDER-LEFT=LIGHT,BORDER-RIGHT=LIGHT,BORDER-BOTTOM=LIGHT, SIZE=8,$
TYPE=TITLE,JUSTIFY=CENTER,BACKCOLOR=RGB(184 204 228),$
TYPE=TITLE,COLUMN=N4,BORDER-LEFT=OFF,BORDER-TOP=OFF,BACKCOLOR=RGB(255 255 255),$
GRAPHTYPE=DATA,COLUMN=N5,GRAPHCOLOR='FUCHSIA',GRAPHLENGTH=0.200000,$
GRAPHTYPE=DATA,COLUMN=N6,GRAPHCOLOR='BLUE',GRAPHLENGTH=0.200000,$
GRAPHTYPE=DATA,COLUMN=N7,GRAPHCOLOR='LIME',GRAPHLENGTH=0.200000,$
GRAPHTYPE=DATA,COLUMN=N8,GRAPHCOLOR='PURPLE',GRAPHLENGTH=0.200000,$
GRAPHTYPE=DATA,COLUMN=N9,GRAPHCOLOR='YELLOW',GRAPHLENGTH=0.200000,$
TYPE=HEADING,
     SIZE=8,
     BORDER-TOP=LIGHT,
     BORDER-BOTTOM=LIGHT,
     BORDER-LEFT=LIGHT,
     BORDER-RIGHT=LIGHT,
$
TYPE=SUBFOOT,
     BACKCOLOR=RGB(184 204 228),
     HEADALIGN=BODY,
	 SIZE= 8,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=1,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=LEFT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=2,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=3,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=4,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=5,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
TYPE=SUBFOOT,
     LINE=1,
     OBJECT=TEXT,
     ITEM=6,
     SIZE=8,
     COLSPAN=1,
     STYLE=BOLD,
     JUSTIFY=RIGHT,
$
ENDSTYLE
 
END
 
 
 
 
-NORANKING
-TYPE Pas de Rang disponible pour la nouvelle région sélectionnée
-FINTAB
-GOTO :FINI
-:PGARDE;
-*Page de garde lorsque aucune nouvelles région ou région n'est sélectionnée
-HTMLFORM INDUCT3_MIRE_ACCUEIL2
-:FINI
 
 
 
 
